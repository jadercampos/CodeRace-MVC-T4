@model PagedList.IPagedList<EducacaoConhecimento.Models.Resposta>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Cadastro de Resposta</h2>


<p>
	<a class="btn btn-primary" href="/Resposta/Create" role="button"><span class="glyphicon glyphicon-file"></span> Novo</a>
	<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"></span> Pesquisar</button>
</p>
<fieldset>
    <legend style="font-size:14px">Filtros</legend>
@using (Html.BeginForm("Index", "Resposta", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-6">
            Palavra-chave: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control-custom" }) 
        </div>
        <div class="col-md-4">
            Itens por página: @Html.TextBox("pages", "3", htmlAttributes: new { @class = "form-control-custom", @type = "number", @style = "width:60px" })
        </div>
    </div>
}
</fieldset>
<hr />
<table class="table table-bordered table-hover table-striped">
    <thead>
    <tr style="background-color:#ccc">
        <th>
			@Html.ActionLink("Pergunta.Descricao", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }, new { @class = "linkGrid" })
        </th>
        <th>
			@Html.ActionLink("Descricao", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }, new { @class = "linkGrid" })
        </th>
        <th>
			@Html.ActionLink("Correta", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }, new { @class = "linkGrid" })
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Pergunta.Descricao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Descricao)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Correta)
        </td>
        <td>
		<a class="btn btn-primary btn-xs" title="Editar" href="/Resposta/Edit/@item.RespostaId" role="button"><span class="glyphicon glyphicon-pencil"></span></a>
		<a class="btn btn-primary btn-xs" title="Consultar" href="/Resposta/Details/@item.RespostaId" role="button"><span class="glyphicon glyphicon-list-alt"></span></a>
		<a class="btn btn-primary btn-xs" title="Excluir" href="/Resposta/Delete/@item.RespostaId" role="button"><span class="glyphicon glyphicon-trash"></span></a>
        </td>
    </tr>
}
    </tbody>
</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }))
