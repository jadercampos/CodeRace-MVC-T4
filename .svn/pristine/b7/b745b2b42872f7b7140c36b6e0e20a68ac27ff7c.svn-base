<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model PagedList.IPagedList<#= "<" + ViewDataTypeName + ">" #>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>Cadastro de <#= ViewDataTypeShortName #></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<p>
	<a class="btn btn-primary" href="/<#= ViewDataTypeShortName #>/Create" role="button"><span class="glyphicon glyphicon-file"></span> Novo</a>
	<button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-search"></span> Pesquisar</button>
</p>
<fieldset>
    <legend style="font-size:14px">Filtros</legend>
@using (Html.BeginForm("Index", "<#= ViewDataTypeShortName #>", FormMethod.Get))
{
    <div class="row">
        <div class="col-md-6">
            Palavra-chave: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control-custom" }) 
        </div>
        <div class="col-md-4">
            Itens por página: @Html.TextBox("pages", "3", htmlAttributes: new { @class = "form-control-custom", @type = "number", @style = "width:60px" })
        </div>
    </div>
}
</fieldset>
<hr />
<table class="table table-bordered table-hover table-striped">
    <thead>
    <tr style="background-color:#ccc">
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
			@Html.ActionLink("<#= GetValueExpression(property) #>", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }, new { @class = "linkGrid" })
        </th>
<#
    }
}
#>
        <th></th>
    </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
		<a class="btn btn-primary btn-xs" title="Editar" href="/<#= ViewDataTypeShortName #>/Edit/@item.<#= pkName #>" role="button"><span class="glyphicon glyphicon-pencil"></span></a>
		<a class="btn btn-primary btn-xs" title="Consultar" href="/<#= ViewDataTypeShortName #>/Details/@item.<#= pkName #>" role="button"><span class="glyphicon glyphicon-list-alt"></span></a>
		<a class="btn btn-primary btn-xs" title="Excluir" href="/<#= ViewDataTypeShortName #>/Delete/@item.<#= pkName #>" role="button"><span class="glyphicon glyphicon-trash"></span></a>
        </td>
<#
} else {
#>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
<#
}
#>
    </tr>
}
    </tbody>
</table>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, pages = ViewBag.pages }))
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>